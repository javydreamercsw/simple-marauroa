<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See commented blocks below for -->
<!-- some examples of how to customize the build. -->
<!-- (If you delete it and reopen the project it will be recreated.) -->
<project name="Marauroa-Simple-Extensions" default="default" basedir=".">
    <description>Builds, tests, and runs the project Marauroa-Simple-Extensions.</description>
    <property name="original.project.dir" value="../../marauroa"/>
    <property name="build.instrumented.dir" value="build/instrumented"/>
    <property name="build.report.dir" value="build/report"/>
    <property name="build.report.cobertura.dir" value="build/cobertura"/>
    <property name="libs.dir" value="build/cobertura"/>
    <available file="${original.project.dir}/build.xml" property="custom.marauroa.present"/>
    <!--Check to see if Simple Libs is present to update my libraries-->
    <condition property="simple.libs.exists">
        <available file="${libs.dir}" type="dir"/>
    </condition>
	
    <target name="can-update-simple-libs">
        <condition property="update-simple-libs">
            <and>
                <not>
                    <equals arg1="${simple.libs.exists}" arg2="$${simple.libs.exists}" />
                </not>
                <not>
                    <equals arg1="${custom.marauroa.present}" arg2="$${custom.marauroa.present}" />
                </not>
            </and>
        </condition>
    </target>
    
    <target name="update-simple-libs" depends="can-update-simple-libs" if="update-simple-libs">
        <delete file="${libs.dir}/marauroa.jar"/>
        <copy todir="${libs.dir}" 
              file="${original.project.dir}/build-archive/marauroa.jar"/>
    </target>

    <target name="pmd" if="simple.libs.exists">
        <taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask">
            <classpath>
                <pathelement location="${libs.dir}/tools/PMD/pmd-4.3.jar"/>
            </classpath>
        </taskdef>
        <mkdir dir="reports/pmd"/>
        <delete file = "reports/pmd/pmd.xml"/> 
        <touch file = "reports/pmd/pmd.xml" /> 
        <pmd rulesetfiles="basic,design">
            <formatter type="xml" toFile="reports/pmd/pmd.xml"/>
            <fileset dir="./src">
                <include name="**/*.java"/>
            </fileset>
        </pmd>
    </target>
	
    <!-- iterate finds all build files, excluding this one and invokes the named target -->
    <macrodef name="iterate">
        <attribute name="target"/>
        <sequential>
            <subant target="@{target}">
                <fileset dir="." 
                         includes="**/*Extension/build.xml"
                         excludes="build.xml"/>
            </subant>
        </sequential>
    </macrodef>

    <target name="build"  description="Build all sub projects">
        <iterate target="jar"/>
    </target>

    <target name="test"  description="Test all sub projects">
        <iterate target="test"/>
    </target>

    <target name="clean"  description="Clean all sub projects">
        <iterate target="clean"/>
    </target>
	
    <target name="pmd-all"  description="PMD all sub projects">
        <iterate target="pmd"/>
    </target>
	
    <target name="javadoc"  description="Javadoc all sub projects">
        <iterate target="javadoc"/>
    </target>
</project>
